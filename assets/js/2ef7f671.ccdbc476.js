"use strict";(self.webpackChunkupsy_desky_docs=self.webpackChunkupsy_desky_docs||[]).push([[209],{8654:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"configuration/decoders/index","title":"Decoders","description":"Since firmware 1.0.0, it is no longer required to manually configure the decoder. It will automatically determine the correct one to use during startup. See Auto-Detection for more information.","source":"@site/docs/configuration/decoders/index.md","sourceDirName":"configuration/decoders","slug":"/configuration/decoders/","permalink":"/docs/configuration/decoders/","draft":false,"unlisted":false,"editUrl":"https://github.com/tjhorner/upsy-desky-docs/edit/main/docs/configuration/decoders/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Configuration","permalink":"/docs/configuration/"},"next":{"title":"Presets","permalink":"/docs/configuration/presets/"}}');var o=i(3274),r=i(7596);const s={},d="Decoders",c={},l=[{value:"What is a decoder?",id:"what-is-a-decoder",level:2},{value:"Auto-Detection",id:"auto-detection",level:2},{value:"Decoders by Model Number",id:"decoders-by-model-number",level:2},{value:"Fully Jarvis",id:"fully-jarvis",level:3},{value:"Uplift v2",id:"uplift-v2",level:3},{value:"AMQ Activ",id:"amq-activ",level:3}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"decoders",children:"Decoders"})}),"\n",(0,o.jsx)(t.admonition,{type:"info",children:(0,o.jsxs)(t.p,{children:["Since firmware 1.0.0, it is no longer required to manually configure the decoder. It will automatically determine the correct one to use during startup. See ",(0,o.jsx)(t.a,{href:"#auto-detection",children:"Auto-Detection"})," for more information."]})}),"\n",(0,o.jsx)(t.h2,{id:"what-is-a-decoder",children:"What is a decoder?"}),"\n",(0,o.jsx)(t.p,{children:"In order to determine the desk height, the firmware uses what we call a decoder in order to interpret the desk's serial protocol. This is the component that handles the bytes coming from the desk's control box and decodes it into a usable height value."}),"\n",(0,o.jsx)(t.p,{children:"These decoders currently exist:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"uplift"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"jarvis"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"omnidesk"})}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["Despite their names, it is possible for a decoder to work on a different brand of desk. For example, the ",(0,o.jsx)(t.code,{children:"uplift"})," decoder works on Jarvis desks with control box model number FULLYCB3-A."]}),"\n",(0,o.jsx)(t.h2,{id:"auto-detection",children:"Auto-Detection"}),"\n",(0,o.jsxs)(t.p,{children:['During startup, the firmware will automatically attempt to determine the correct decoder to use. It sends a packet to the control box to wake it up, and cycles through each possible decoder to see which one produces a valid height value. If you are having trouble with this (i.e., the desk height is reported as "Unknown"), please see ',(0,o.jsx)(t.a,{href:"/docs/troubleshooting/#the-desk-height-is-not-being-reported-properly",children:"this section"})," of the troubleshooting guide for further instructions."]}),"\n",(0,o.jsx)(t.h2,{id:"decoders-by-model-number",children:"Decoders by Model Number"}),"\n",(0,o.jsx)(t.p,{children:"Here is a list of known control box model numbers and the decoders that work with them."}),"\n",(0,o.jsx)(t.h3,{id:"fully-jarvis",children:"Fully Jarvis"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["FULLYCB2C-A: ",(0,o.jsx)(t.code,{children:"jarvis"})]}),"\n",(0,o.jsxs)(t.li,{children:["FULLYCB3-A: ",(0,o.jsx)(t.code,{children:"uplift"})]}),"\n",(0,o.jsxs)(t.li,{children:["JCB36N2CA-230: ",(0,o.jsx)(t.code,{children:"jarvis"})]}),"\n",(0,o.jsxs)(t.li,{children:["JCB35N-110: ",(0,o.jsx)(t.code,{children:"uplift"})]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"uplift-v2",children:"Uplift v2"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["FRM053-2: ",(0,o.jsx)(t.code,{children:"uplift"})]}),"\n"]}),"\n",(0,o.jsx)(t.h3,{id:"amq-activ",children:"AMQ Activ"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["X-AP2-WFC.F3 (V4.2) / 1308870001 rev A: ",(0,o.jsx)(t.code,{children:"uplift"})]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},7596:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>d});var n=i(9474);const o={},r=n.createContext(o);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);